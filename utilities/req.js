export class Req{static async do(e,{method:a="GET",body:s=null,headers:t={"Content-Type":"application/json;"},responseType:n="json"}={},{before:l=null,success:o=null,error:i=null,after:c=null}={}){if(null!=l&&l(),e.startsWith("/")&&(e=window.location.origin+e),null!==s)if(t["Content-Type"].includes("application/json"))s=JSON.stringify(s);else{let e=new FormData;for(const[a,t]of Object.entries(s))if(Array.isArray(t))for(var r in t)if(t[r]===Object(t[r]))for(var[p,f]of Object.entries(t[r]))e.append(`${a}[${r}][${p}]`,f);else e.append(`${a}[${r}]`,t[r]);else e.append(a,t);s=e}let u,y=await fetch(e,{method:a,body:s,headers:t,responseType:n});if(y.ok){let e=!1;switch(y.headers.get("Content-Type")){case"application/json":case"application/json; charset=utf-8":u=await y.json(),e=!("successfully"in u&&!u.successfully);break;case"application/octet-stream":case"application/pdf":u=await y.blob(),e=!0;break;default:try{u=await y.json(),e=!("successfully"in u&&!u.successfully)}catch(a){u=await y.text(),e=!0}}e?null!=o&&o(u):null!=i&&i(u)}else i(await y);c&&c(u)}}
